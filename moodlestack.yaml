
Parameters:
	SnapshotToRestore:
		Type: String
		Default: ""
		Description: Snapshot id to restore DB. leave blank if you are going to start a fresh install
	EnvironmentSize:
		Type: String
		Default: SMALL
		AllowedValues:
			- SMALL
			- MEDIUM
			- LARGE
		Description: Select and environment size (S,M,L) Large environments will deploy an aurora cluster
	DatabaseName:
		Type: String
		Default: MoodleDB
		MinLength: 8
		MaxLength: 64
		AllowedPattern: "[a-zA-Z][a-zA-Z0-9]*" # Start with a letter, alphanumeric characters only
	DatabaseUser:
		Type: String
		Default: moodledude
		MinLength: 8
		MaxLength: 16
		AllowedPattern: "[a-zA-Z][a-zA-Z0-9]*" # Start with a letter, alphanumeric characters only
	DatabasePassword:
		Type: String
		Default: moodledudepassword
		MinLength: 8
		MaxLength: 41
		NoEcho: true
		AllowedPattern: "[a-zA-Z][a-zA-Z0-9]*" # Start with a letter, alphanumeric Characters only
Conditions:
	isLarge:
		!Equals [!Ref EnvironmentSize, "LARGE"]
	isntLarge:
		!Not [!Equals [!Ref EnvironmentSize. "LARGE"]]
	isRestore:
		!Not [!Equals [!Ref SnapshotToRestore, ""]]
Mappings:
	RegionMap:
        us-east-1:
      			"UBUNTU" : "ami-3dec9947" # Ubuntu  2017
    		us-east-2:
      			"UBUNTU" : "ami-597d553c" # Ubuntu  2017
    		us-west-1:
      			"UBUNTU" : "ami-1a17137a" # Ubuntu  2017
    		us-west-2:
      			"UBUNTU" : "ami-a2e544da" # Ubuntu  2017
    		ca-central-1:
      			"UBUNTU" : "ami-b0c67cd4" # Ubuntu  2017
    		eu-west-1:
      			"UBUNTU" : "ami-63b0341a" # Ubuntu  2017
        eu-central-1:
      			"UBUNTU" : "ami-13b8337c" # Ubuntu  2017
    		eu-west-2:
      			"UBUNTU" : "ami-22415846" # Ubuntu  2017
    		ap-southeast-1:
      			"UBUNTU" : "ami-29aece55" # Ubuntu  2017
    		ap-southeast-2:
      			"UBUNTU" : "ami-9b8076f9" # Ubuntu  2017
    		ap-northeast-2:
      			"UBUNTU" : "ami-5027813e" # Ubuntu  2017
    		ap-northeast-1:
      			"UBUNTU" : "ami-42ca4724" # Ubuntu  2017
    		ap-south-1:
      			"UBUNTU" : "ami-84dc94eb" # Ubuntu  2017
    		sa-east-1:
      			"UBUNTU" : "ami-8181c7ed" # Ubuntu  2017
	InstanceSize:
    SMALL:
			"EC2": "t2.micro"
			"DB" : "db.t2.micro"
		MEDIUM:
			"EC2": "t2.small"
			"DB" : "db.t2.small"
		LARGE:
			"EC2": "t2.medium"
			"DB" : "db.r3.xlarge"
Resources:
  ELB:
     Type:
     Properties:
  EC2:
     Type: "AWS::EC2::Instance"
     DeletionPolicy: Delete
     Properties:
	       ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", UBUNTU]
	       InstanceType: !FindInMap [InstanceSize, !Ref EnvironmentSize, EC2]
         KeyName: KeyName
         UserData:
          "Fn::Base64":
            !Sub |
             #!/bin/bash
             sudo apt-get update -y  aws-cfn-bootstrap
             /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource EC2 --configsets moodle --region ${AWS::Region}
             sudo apt-get update
             sudo apt-get install git-core
             cd /opt
             sudo git clone git://git.moodle.org/moodle.git
             cd moodle
             sudo git branch --track MOODLE_33_STABLE origin/MOODLE_33_STABLE
             sudo git checkout MOODLE_33_STABLE
             sudo cp -R /opt/moodle /var/www/html/
     CreationPolicy:
       ResourcesSignal:
        Count: "1"
        Timeout: PT15M
     Metadata:
      AWS::CloudFormation::Init:
        configsets:
          moodle:
            -"config_cfn"
            -"install_moodle"
            -"config_moodle"
        config_cfn:
          files:
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                trigger=post.update
                path=Resources.EC2.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource EC2 --configsets wordpress --region ${AWS::Region}
              mode: "000400"
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
               [main]
               stack=${AWS::StackId}
               region=${AWS::Region}
               verbose=true
               interval=5
              mode: "000400"
              owner: root
              group: root
          services:
            sysvinit:
              cfn-hup:
                enabled: "true"
                ensureRunning: "true"
                files:
                  - "/etc/cfn/cfn-hup.conf"
                  - "/etc/cfn/hooks.d/cfn-auto-reloader.conf"
        install_moodle:
          packages:
            sudo:
              apache2: []
              php: []
              mysql-server: []
              mysql-client: []
              php-mysql: []
              php-pspell: []
              php-curl: []
              php-gd: []
              php-intl: []
              php-xml: []
              php-xmlrpc: []
              php-ldap: []
              php-zip: []
              php-soap: []
              php-mbstring: []
              graphviz: []
              aspell: []
              ghostscript: []
              clamav: []
            service:
              apache2: 
                enabled: true
                ensureRunning: true
        config_moodle:
          commands:
            01_clone_config:
              cwd: "var/www/html/moodle"
              test: "test ! -e /var/www/html/moodle/config.php"
              command: "cp config-dist.php config.php"
            02_inject_dbhost:
              cwd: "var/www/html/moodle"
              command: !Sub |
                sed -i 's/localhost/${DB.Endpoint.Address}/g' config.php
            03_inject_dbname:
              cwd: "var/www/html/moodle"
              command: !Sub |
                sed -i 's/moodle/${DatabaseName}/g' config.php
            04_inject_dbuser:
              cwd: "var/www/html/moodle"
              command: !Sub |
                sed -i 's/username/${DatabaseUser}/g' config.php
            05_inject_dbpassword:
              cwd: "var/www/html/moodle"
              command: !Sub |
                sed -i 's/password/${DatabasePassword}/g' config.php
            06_set_dbtype:
              cwd: "var/www/html/moodle"
              command: !Sub |
                sed -i 's/pgsql/mysqli/g' config.php


  DB:
    Type: "AWS::RDS::DBInstance"
    DeletionPolicy: Snapshot
    Properties:
       AllocatedStorage: 5
       StorageType: gp2
       DBInstanceClass: 
       Engine: MySQL
       MasterUserName: !Ref DatabaseUser
       MasterUserPassword: !Ref DatabasePassword
  DBAuroraCluster:
	 Type: "AWS::RDS::DBCluster"
	 DeletionPolicy: Snapshot
	 Condition:
	 Properties:
		DataBaseName: !Ref DataBaseName
		Engine: Aurora
		MasterUserName: !Ref DatabaseUser
		MasterUserPassword: !Ref DatabasePassword
		SnapshotIdentifier: !Ref SnapshotIdentifier
  DBAurora:
	 Type:
	 Condition:
	 Properties:
		DBClusterIdentifier: !Ref DBAuroraCluster
		Engine: Aurora
		DBInstanceClass: !FinInMap [InstanceSize, !Ref Environmentsize, DB]
  S3:
    Type: "AWS::S3::Bucket"
    DeletionPolicy: Retain
Outputs:
