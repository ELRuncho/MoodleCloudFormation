Parameters:
  vpcidr:
    Type: String
    Minlength: 9
    Maxlength: 18
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstrainDescription: Use a valid range in the form x.x.x.x/16
    Default: 10.20.0.0/16
  sharedcidrA:
    Type: String
    MinLength: 9
    MaxLength: 18
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: Use a valid CIDR range in the form x.x.x.x/22
    Default: 10.20.0.0/22
  sharedcidrB:
    Type: String
    MinLength: 9
    MaxLength: 18
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: Must be a valid CIDR range in the form x.x.x.x/22
    Default: 10.20.4.0/22
Resources:
  VPC:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: !Ref vpcidr
  IGW:
    Type: "AWS::EC2::InternateGateway"
  GatewayAttach:
    Type: "AWS::VPC::VPCGateWayAttachment"
    Properties:
      VpcId: !Ref VPC
      InternetGateWayId: !Ref IGW
  PublicSharedSubnetA:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: !Select [0, !GetAZs ]
      CidrBlock: !Ref sharedcidrA
      MapPublicIpOnLaunch: true
      VpcId: !Ref VPC
  PublicSharedSubnetB:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: !Select [1, !GetAZs ]
      CidrBlock: !Ref sharedcidrB
      MapPublicIpOnLaunch: true
      VpcId: !Ref VPC
  RTAsociationPSubnetA:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref RouteTablePublic
      SubnetId: !Ref PublicSharedSubnetA
  RTAsociationPSubnetB:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref RouteTablePublic
      SubnetId: !Ref PublicSharedSubnetB   
Outputs: