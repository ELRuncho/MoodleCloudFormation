Parameters:
  SnapshotToRestore:
    Type: String
    Default: ""
    Description: Snapshot id to restore DB. leave blank if you are going to start a fresh install
  EnvironmentSize:
    Type: String
    Default: SMALL
    AllowedValues:
      - SMALL
      - MEDIUM
      - LARGE
    Description: Select and environment size (S,M,L) Large environments will deploy an aurora cluster
  DatabaseName:
    Type: String
    Default: MoodleDB
    MinLength: 8
    MaxLength: 64
    AllowedPattern: "[a-zA-Z][a-zA-Z0-9]*" # Start with a letter, alphanumeric characters only
  DatabaseUser:
    Type: String
    Default: moodledude
    MinLength: 8
    MaxLength: 16
    AllowedPattern: "[a-zA-Z][a-zA-Z0-9]*" # Start with a letter, alphanumeric characters only
  DatabasePassword:
    Type: String
    Default: moodledudepassword
    MinLength: 8
    MaxLength: 41
    NoEcho: true
    AllowedPattern: "[a-zA-Z][a-zA-Z0-9]*" # Start with a letter, alphanumeric Characters only
  KeyPair:
    Type: AWS::EC2::KeyPair::KeyName
    Default: ""
    Description: Select the Name of the Key Pair you whant to use for EC2
Conditions:
  isLarge:
    !Equals [!Ref EnvironmentSize, "LARGE"]
  isntLarge:
    !Not [!Equals [!Ref EnvironmentSize, "LARGE"]]
  isRestore:
    !Not [!Equals [!Ref SnapshotToRestore, ""]]
Mappings:
  RegionMap:
    us-east-1:
      "UBUNTU" : "ami-3dec9947" # Ubuntu  2017
    us-east-2:
      "UBUNTU" : "ami-597d553c" # Ubuntu  2017
    us-west-1:
      "UBUNTU" : "ami-1a17137a" # Ubuntu  2017
    us-west-2:
      "UBUNTU" : "ami-a2e544da" # Ubuntu  2017
    ca-central-1:
      "UBUNTU" : "ami-b0c67cd4" # Ubuntu  2017
    eu-west-1:
      "UBUNTU" : "ami-63b0341a" # Ubuntu  2017
    eu-central-1:
      "UBUNTU" : "ami-13b8337c" # Ubuntu  2017
    eu-west-2:
      "UBUNTU" : "ami-22415846" # Ubuntu  2017
    ap-southeast-1:
      "UBUNTU" : "ami-29aece55" # Ubuntu  2017
    ap-southeast-2:
      "UBUNTU" : "ami-9b8076f9" # Ubuntu  2017
    ap-northeast-2:
      "UBUNTU" : "ami-5027813e" # Ubuntu  2017
    ap-northeast-1:
      "UBUNTU" : "ami-42ca4724" # Ubuntu  2017
    ap-south-1:
      "UBUNTU" : "ami-84dc94eb" # Ubuntu  2017
    sa-east-1:
      "UBUNTU" : "ami-8181c7ed" # Ubuntu  2017
  InstanceSize:
    SMALL:
      "EC2": "t2.micro"
      "DB" : "db.t2.micro"
    MEDIUM:
      "EC2": "t2.small"
      "DB" : "db.t2.small"
    LARGE:
      "EC2": "t2.medium"
      "DB" : "db.r3.xlarge"
Resources:
  EC2:
    Type: "AWS::EC2::Instance"
    DeletionPolicy: Delete
    Properties:
      ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", UBUNTU]
      InstanceType: !FindInMap [InstanceSize, !Ref EnvironmentSize, EC2]
      KeyName: !Ref KeyPair
      UserData:
        "Fn::Base64":
          !Sub |
            #!/bin/bash
            apt-get update
            apt-get -y install python-pip
            pip install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz
            cp /usr/local/init/ubuntu/cfn-hup /etc/init.d/cfn-hup
            chmod +x /etc/init.d/cfn-hup
            update-rc.d cfn-hup defaults
            service cfn-hup start
            cfn-init -v --stack ${AWS::StackName} --resource EC2 --configsets moodle --region ${AWS::Region}
            cfn-signal -e $? --stack ${AWS::StackName} --resource EC2 --region ${AWS::Region}
            apt-get -y update
    CreationPolicy:
       ResourceSignal:
        Count: "1"
        Timeout: PT30M
    Metadata:
      AWS::CloudFormation::Init:
        configSets:
          moodle:
            - "config_cfn"
            - "install_moodle"
            - "config_moodle"
        config_cfn:
          files:
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.EC2.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource EC2 --configsets moodle --region ${AWS::Region}
              mode: "000400"
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
                verbose=true
                interval=5
              mode: "000400"
              owner: root
              group: root
          services:
            sysvinit:
              cfn-hup:
                enabled: "true"
                ensureRunning: "true"
                files:
                  - "/etc/cfn/cfn-hup.conf"
                  - "/etc/cfn/hooks.d/cfn-auto-reloader.conf"
        install_moodle:
          packages:
            apt:
              git: []
              awscli: []
              php: []
              mysql-client: []
              libapache2-mod-php7.0: []
              graphviz: []
              aspell: []
              ghostscript: []
              clamav: []
              php7.0-pspell: []
              php7.0-curl: []
              php7.0-gd: []
              php7.0-intl: []
              php7.0-mysql: []
              php7.0-xml: []
              php7.0-xmlrpc: []
              php7.0-ldap: []
              php7.0-zip: []
              php7.0-soap: []
              php7.0-mbstring: []
          services:
            httpd: 
              enabled: "true"
              ensureRunning: "true"
        config_moodle:
          commands:
            00_reboot_apache:
              cwd: "/opt"
              command: "service apache2 restart"
            01_get_moodle:
              cwd: "/var/www/html"
              command: "git clone git://git.moodle.org/moodle.git"
            02_get_branch:
              cwd: "/var/www/html/moodle"
              command: "sudo git branch --track MOODLE_34_STABLE origin/MOODLE_34_STABLE"
            03_checkout_branch:
              cwd: "/var/www/html/moodle"
              command: "sudo git checkout MOODLE_34_STABLE"
            04_copy_config:
              cwd: "/var/www/html/moodle"
              test: "test ! -e /var/www/html/moodle/config.php"
              command: "sudo cp config-dist.php config.php"
            05_create_moodledata:
              cwd: "/var"
              command: mkdir /var/moodledata
            06_inject_dbtype:
              cwd: "/var/www/html/moodle"
              command: !Sub |
                sed -i 's/pgsql/mysqli/g' config.php
            07_inject_dbhost:
              cwd: "/var/www/html/moodle"
              command: !If
                - isntLarge
                - !Sub |
                  sed -i 's/localhost/${DB.Endpoint.Address}/g' config.php
                - !Sub |
                  sed -i 's/localhost/${DBAuroraCluster.Endpoint.Address}/g' config.php
            08_injecting_dbname:
              cwd: "/var/www/html/moodle"
              command: !Sub  |
                sed -i 's/moodle/${DatabaseName}/g' config.php
            09_injecting_dbuser:
              cwd: "/var/www/html/moodle"
              command: !Sub |
                sed -i 's/username/${DatabaseUser}/g' config.php
            10_injecting_dbpassword:
              cwd: "/var/www/html/moodle"
              command: !Sub |
                sed -i 's/password/${DatabasePassword}/g' config.php
            11_get_instance_ip:
              cwd: "/var/www/html/moodle"
              command: "curl http://169.254.169.254/latest/meta-data/public-ipv4 > ip.address"
            12_remove_cfgroot:
              cwd: "/var/www/html/moodle"
              command: !Sub |
                sed -i '87d' config.php
            13_inject_wwroot:
              cwd: "/var/www/html/moodle"
              command: !Sub |
                myip=`cat ip.address` && sed -i "87i \$CFG->wwwroot = 'http://$myip/moodle';" config.php
            14_inject_dataroot:
              cwd: "/var/www/html/moodle"
              command: !Sub |
                sed -i 's=/home/example/MoodleDBdata=/var/moodledata=g' config.php
            15_change_dataroot_own:
              cwd: "/var"
              command: "chown -R www-data moodledata"
            16_change_dataroot_mod:
              cwd: "/var"
              command: "chmod -R 777 moodledata"
            17_change_root_mod:
              cwd: "/var/www/html"
              command: "chmod -R 0755 moodle"
  DB:
    Type: "AWS::RDS::DBInstance"
    Condition: isntLarge 
    DeletionPolicy: Snapshot
    Properties:
       AllocatedStorage: 5
       StorageType: gp2
       DBInstanceClass: !FindInMap [InstanceSize,!Ref EnvironmentSize, DB]
       DBName: !If [isRestore, !Ref "AWS::NoValue", !Ref DatabaseName]
       Engine: MySQL
       EngineVersion: "5.7.17"
       MasterUsername: !If [isRestore, !Ref "AWS::NoValue", !Ref DatabaseUser]
       MasterUserPassword: !If [isRestore, !Ref "AWS::NoValue", !Ref DatabasePassword]
       DBSnapshotIdentifier: !If [isRestore, !Ref SnapshotToRestore, !Ref "AWS::NoValue"]
  DBAuroraCluster:
    Type: "AWS::RDS::DBCluster"
    DeletionPolicy: Snapshot
    Condition: isLarge
    Properties:
      DataBaseName: !If [isRestore, !Ref "AWS::NoValue", !Ref DatabaseName]
      Engine: Aurora
      MasterUsername: !If [isRestore, !Ref "AWS::NoValue", !Ref DatabaseUser]
      MasterUserPassword: !If [isRestore,!Ref "AWS::NoValue", !Ref DatabasePassword]
      SnapshotIdentifier: !If [isRestore, !Ref SnapshotToRestore, !Ref "AWS::NoValue"]
  DBAurora:
    Type: "AWS::RDS::DBInstance"
    Condition: isLarge
    Properties:
      DBClusterIdentifier: !Ref DBAuroraCluster
      Engine: aurora
      DBInstanceClass: !FindInMap [InstanceSize, !Ref EnvironmentSize, DB]
  S3:
    Type: "AWS::S3::Bucket"
    DeletionPolicy: Delete
Outputs:
  moodleroot:
    Description: Access URL for Moodle
    Value: !Join ["", ["http://", !GetAtt EC2.PublicIp, "/moodle"]]